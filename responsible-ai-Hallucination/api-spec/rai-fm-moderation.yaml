openapi: 3.0.1
info:
  title: Infosys Responsible AI - LLM Moderation - OpenAPI 3.0
  description: |-
    API specs for Infosys Responsible AI LLM Moderation layer in OpenAPI 3.0 format

  contact:
    email: infosysraitoolkit@infosys.com
  license:
    name: Infosys
  version: 0.0.3
security:
 - oauth_auth:
      - read: users
      - write: users
servers:
  - url: https://<tba>/api/v0d1
tags:
  - name: LLM Moderation
    description: Operations required for LLM moderation proxy.
    externalDocs:
      description: Find out more
paths:
  /api/v1/moderationlayer/completions:
    post:
      tags:
        - Infosys Responsible AI - LLM Moderation
      summary: Generate Text
      operationId: generate-text-api-v1-moderationlayer-completions-post
      security:
        - oauth_auth:
          - write: users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/completionRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/completionResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'

  /api/v1/moderationlayer:
    post:
      tags:
        - Infosys Responsible AI - LLM Moderation
      summary: Generate Text
      operationId: generate-text-api-v1-moderationlayer-post
      security:
        - oauth_auth:
          - write: users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/moderationlayerRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/moderationlayerResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    Choice:
      properties:
        text:
          type: string
          title: Text
          example: Russia is the biggest country by area.
        index:
          type: integer
          title: Index
          example: 0
        finishReason:
          type: string
          title: Finishreason
          example: length
      type: object
      required:
        - text
        - index
        - finishReason
      title: Choice
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    ModerationResults:
      properties:
        id:
          type: string
          title: Id
          example: 123e4567-e89b-12d3-a456-426614174000
        requestModeration:
          $ref: '#/components/schemas/RequestModeration'
        responseModeration:
          $ref: '#/components/schemas/ResponseModeration'
      type: object
      required:
        - id
        - requestModeration
        - responseModeration
      title: ModerationResults
    RequestModeration:
      properties:
        text:
          type: string
          title: Text
          example: Which is the biggest country in the world?
        promptInjectionCheck:
          $ref: '#/components/schemas/promptInjectionCheck'
        jailbreakCheck:
          $ref: '#/components/schemas/jailbreakCheck'
        privacyCheck:
          $ref: '#/components/schemas/privacyCheck'
        profanityCheck:
          $ref: '#/components/schemas/profanityCheck'
        toxicityCheck:
          $ref: '#/components/schemas/toxicityCheck'
        restrictedTopic:
          $ref: '#/components/schemas/restrictedtopic'
        summary:
          $ref: '#/components/schemas/summary'
      type: object
      required:
        - text
        - promptInjectionCheck
        - jailbreakCheck
        - privacyCheck
        - profanityCheck
        - toxicityCheck
        - restrictedtopic
        - summary
      title: RequestModeration
    ResponseModeration:
      properties:
        generatedText:
          type: string
          title: Generatedtext
          example: Russia is the biggest country by area.
        privacyCheck:
          $ref: '#/components/schemas/privacyCheck'
        profanityCheck:
          $ref: '#/components/schemas/profanityCheck'
        toxicityCheck:
          $ref: '#/components/schemas/toxicityCheck'
        restrictedTopic:
          $ref: '#/components/schemas/restrictedtopic'
        textQuality:
          $ref: '#/components/schemas/textQuality'
        textRelevanceCheck:
          $ref: '#/components/schemas/textRelevanceCheck'
        refusalCheck:
          $ref: '#/components/schemas/refusalCheck'
        summary:
          $ref: '#/components/schemas/summary'
      type: object
      required:
        - generatedText
        - privacyCheck
        - profanityCheck
        - toxicityCheck
        - restrictedtopic
        - textQuality
        - textRelevanceCheck
        - refusalCheck
        - summary
      title: ResponseModeration
    Result:
      type: string
      enum:
        - PASSED
        - FAILED
        - UNMODERATED
        - <class 'ModerationLayer.mapper.mapper.Result.Config'>
      title: Result
      description: An enumeration.
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
              - type: string
              - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
        - loc
        - msg
        - type
      title: ValidationError
    completionRequest:
      properties:
        prompt:
          type: string
          title: Prompt
          example: Which is the biggest country in the world?
        temperature:
          type: string
          title: Temperature
          example: '0'
        teamId:
          type: string
          title: teamID
          example: Demo
        appId:
          type: string
          title: appId
          example: 1

      type: object
      required:
        - prompt
        - temperature
        - teamId
        - appId
      title: completionRequest
    completionResponse:
      properties:
        id:
          type: string
          title: Id
          example: 123e4567-e89b-12d3-a456-426614174000
        object:
          type: string
          title: Object
          example: text_completion
        created:
          type: string
          title: Created
          example: '1646932609'
        model:
          type: string
          title: Model
          example: gpt-35-turbo
        choices:
          items:
            $ref: '#/components/schemas/Choice'
          type: array
          title: Choices
        moderationResults:
          $ref: '#/components/schemas/ModerationResults'
      type: object
      required:
        - id
        - object
        - created
        - model
        - choices
        - moderationResults
      title: completionResponse
    jailbreakCheck:
      properties:
        jailbreakSimilarityScore:
          type: string
          title: Jailbreaksimilarityscore
          example: '0.22'
        jailbreakThreshold:
          type: string
          title: Jailbreakthreshold
          example: '0.6'
        result:
          allOf:
            - $ref: '#/components/schemas/Result'
          example: PASSED
      type: object
      required:
        - jailbreakSimilarityScore
        - jailbreakThreshold
        - result
      title: jailbreakCheck
    privacyCheck:
      properties:
        entitiesRecognised:
          items: {}
          type: array
          title: Entitiesrecognised
          example:
            - PERSON
        entitiesConfiguredToBlock:
          items: {}
          type: array
          title: Entitiesconfiguredtoblock
          example:
            - ADHAR_NUMBER
        result:
          allOf:
            - $ref: '#/components/schemas/Result'
          example: PASSED
      type: object
      required:
        - entitiesRecognised
        - entitiesConfiguredToBlock
        - result
      title: privacyCheck
    profanityCheck:
      properties:
        profaneWordsIdentified:
          items: {}
          type: array
          title: Profanewordsidentified
          default:
            []
        profaneWordsthreshold:
          type: string
          title: Profanewordsthreshold
          example: '1'
        result:
          allOf:
            - $ref: '#/components/schemas/Result'
          example: PASSED
      type: object
      required:
        - profaneWordsthreshold
        - result
      title: profanityCheck
    promptInjectionCheck:
      properties:
        injectionConfidenceScore:
          type: string
          title: Injectionconfidencescore
          example: '0.48'
        injectionThreshold:
          type: string
          title: Injectionthreshold
          example: '0.70'
        result:
          allOf:
            - $ref: '#/components/schemas/Result'
          example: PASSED
      type: object
      required:
        - injectionConfidenceScore
        - injectionThreshold
        - result
      title: promptInjectionCheck
    refusalCheck:
      properties:
        refusalSimilarityScore:
          type: string
          title: Refusalsimilarityscore
          example: '0.32'
        RefusalThreshold:
          type: string
          title: Refusalthreshold
          example: '0.6'
        result:
          allOf:
            - $ref: '#/components/schemas/Result'
          example: PASSED
      type: object
      required:
        - refusalSimilarityScore
        - RefusalThreshold
        - result
      title: refusalCheck
    restrictedtopic:
      properties:
        topicScores:
          items: {}
          type: array
          title: Topicscores
          example:
            - Explosives: '0.15'
        topicThreshold:
          type: string
          title: Topicthreshold
          example: '0.65'
        result:
          allOf:
            - $ref: '#/components/schemas/Result'
          example: PASSED
      type: object
      required:
        - topicScores
        - topicThreshold
        - result
      title: restrictedtopic
    summary:
      properties:
        status:
          type: string
          title: Status
          example: PASSED
        reason:
          items: {}
          type: array
          title: Reason
          example: '[]'
      type: object
      required:
        - status
        - reason
      title: summary
    textQuality:
      properties:
        readabilityScore:
          type: string
          title: Readabilityscore
          example: '80'
        textGrade:
          type: string
          title: Textgrade
          example: Grade 12-13
      type: object
      required:
        - readabilityScore
        - textGrade
      title: textQuality
    textRelevanceCheck:
      properties:
        PromptResponseSimilarityScore:
          type: string
          title: Promptresponsesimilarityscore
          example: '0.82'
      type: object
      required:
        - PromptResponseSimilarityScore
      title: textRelevanceCheck
    toxicityCheck:
      properties:
        toxicityScore:
          items: {}
          type: array
          title: Toxicityscore
          example:
            - toxicity: '0.05'
        toxicityThreshold:
          type: string
          title: Toxicitythreshold
          example: '0.55'
        result:
          allOf:
            - $ref: '#/components/schemas/Result'
          example: PASSED
      type: object
      required:
        - toxicityScore
        - toxicitythreshold
        - result
      title: toxicityCheck
      
    moderationlayerRequest:
      title: completionRequest
      required:
        - prompt
        - moderationChecks
        - moderationCheckThresholds
      type: object
      properties:
        prompt:
          title: Prompt
          type: string
          example: Which is the biggest country in the world?
        moderationChecks:
          title: Moderationchecks
          type: array
          items:
            type: string
            enum: ['PromptInjection','JailBreak','Toxicity','Piidetct','Refusal','Profanity','RestrictTopic','TextQuality']
          example: ['PromptInjection','JailBreak','Toxicity','Piidetct','Refusal','Profanity','RestrictTopic','TextQuality']
        moderationCheckThresholds:
          title: Moderationcheckthresholds
          type: object
          example:
            promptInjectionThreshold: 0.7
            jailbreakThreshold: 0.7
            piiEntitiesConfiguredToDetect:
              - PERSON
              - LOCATION
              - DATE,AU_ABN
              - AADHAR_NUMBER
              - IT_PASSPORT
              - PAN_Number
              - PASSPORT
            piiEntitiesConfiguredToBlock:
              - AADHAR_NUMBER
              - PAN_Number
            refusalThreshold: 0.8
            toxicityThresholds:
              toxicityThreshold: 0.6
              severeToxicityThreshold: 0.6
              obsceneThreshold: 0.6
              threatThreshold: 0.6
              insultThreshold: 0.6
              identityAttackThreshold: 0.6
              sexualExplicitThreshold: 0.6
            profanityCountThreshold: 1
            relatedTopicDetails:
              relatedTopicThreshold: 0.7
              relatedTopics:
                - Terrorism
                - Explosives
                
    moderationlayerResponse:
      title: ModerationResults
      required:
        - id
        - moderationResults
      type: object
      properties:
        id:
          title: Id
          type: string
          example: 123e4567-e89b-12d3-a456-426614174000
        moderationResults:
          $ref: '#/components/schemas/moderationResults'
    moderationResults:
      title: moderationResults
      required:
        - text
        - promptInjectionCheck
        - jailbreakCheck
        - privacyCheck
        - profanityCheck
        - toxicityCheck
        - restrictedtopic
        - textQuality
        - refusalCheck
        - summary
      type: object
      properties:
        text:
          title: Text
          type: string
          example: Which is the biggest country in the world?
        promptInjectionCheck:
          $ref: '#/components/schemas/promptInjectionCheck'
        jailbreakCheck:
          $ref: '#/components/schemas/jailbreakCheck'
        privacyCheck:
          $ref: '#/components/schemas/privacyCheck'
        profanityCheck:
          $ref: '#/components/schemas/profanityCheck'
        toxicityCheck:
          $ref: '#/components/schemas/toxicityCheck'
        restrictedTopic:
          $ref: '#/components/schemas/restrictedtopic'
        textQuality:
          $ref: '#/components/schemas/textQuality'
        refusalCheck:
          $ref: '#/components/schemas/refusalCheck'
        summary:
          $ref: '#/components/schemas/summary'
  securitySchemes:
    api_key:
      type: apiKey
      name: api_key
      in: header
    petstore_auth:
      type: oauth2
      flows:    

